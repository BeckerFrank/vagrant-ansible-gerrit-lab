---
- name: Build AD for LDAP
  hosts: samba-server
  become: true
  vars:
    - enable_dhcp_services: false
    - pri_domain_name: vagrant.local
    - samba_create_domain_controller: true
    - samba_create_domain_users: true  #defines if users defined in samba_domain_users list should be created
    - samba_domain_users:
        - name: 'gerrit'
          password: 'P@55w0rd'
        - name: 'gitlab'
          password: 'P@55w0rd'
        - name: 'jenkins'
          password: 'P@55w0rd'
        - name: 'lab'
          password: 'P@55w0rd'
    - samba_server_role: 'active directory domain controller'  #defines server role...(standalone server or active directory domain controller)
  roles:
    - role: ansible-isc-dhcp
      when: enable_dhcp_services is defined and enable_dhcp_services
    - role: ansible-ntp
    - role: ansible-samba
  tasks:

- name: Installs Gerrit Code Review
  hosts: gerrit-server
  become: true
  vars:
    - gerrit_allow_remote_admin: true  #defines if gerrit should allow remote admin capabilities
    - gerrit_replication_enabled: true
    - gerrit_auth_type: LDAP_BIND  #defines authorization type...OPENID, LDAP, LDAP_BIND...
    - gerrit_db_info:
#        - host: localhost
#          type: h2
#          db: db/ReviewDB
#          user: gerrit
#          pass: gerrit
        - host: localhost
          type: mysql
          db: reviewdb
          user: gerrit
          pass: gerrit
    - gerrit_ldap_info:
        - server: 'ldap://192.168.202.200'
          accountbase: 'DC=vagrant,DC=local'
          accountpattern: '(&(objectClass=person)(userPrincipalName=${username}))'
          accountscope: 'sub'
          groupbase: 'DC=vagrant,DC=local'
          accountfullname: 'displayName'
          accountmemberfield: 'memberOf'
          accountemailaddress: 'mail'
          accountsshusername: '${sAMAccountName.toLowerCase}'
          referral: 'follow'
    - gerrit_vagrant_install: true
    - install_mysql: true
    - nameserver: '192.168.202.200'
    - pri_domain_name: vagrant.local
  roles:
    - role: ansible-apache2
    - role: ansible-mariadb-mysql
      when: install_mysql is defined and install_mysql
    - role: ansible-gerrit
  tasks:
#    - name: Creating /etc/rc.local
#      template:
#        src: "templates/rc.local.j2"
#        dest: "/etc/rc.local"
#        owner: root
#        group: root
#        mode: 0755
#      register: rc_local
#
#    - name: configuring /etc/resolv.conf workaround
#      template:
#        src: "templates/resolv.conf.j2"
#        dest: "/etc/resolv.conf.mine"
#        owner: root
#        group: root
#        mode: 0644
#
#    - name: updating current /etc/resolv.conf
#      command: /etc/rc.local
#      when: rc_local.changed

- name: Installs Jenkins
  hosts: jenkins-server
  become: true
  vars:
    - config_jenkins: false
    - jenkins_ldap_info:
        active_directory: true
        enabled: false
        server: '192.168.202.200'
        port: 389
        root_dn: 'DC=vagrant,DC=local'
        user_search_base: 'CN=Users'
        manager_dn: 'CN=jenkins,CN=Users,DC=vagrant,DC=local'
        manager_password: 'P@55w0rd'  #This will be encrypted when saved from WebUI
        disable_email_address_resolver: false
    - nameserver: '192.168.202.200'
    - pri_domain_name: vagrant.local
  roles:
    - role: ansible-jenkins
  tasks:
#    - name: Creating /etc/rc.local
#      template:
#        src: "templates/rc.local.j2"
#        dest: "/etc/rc.local"
#        owner: root
#        group: root
#        mode: 0755
#      register: rc_local
#
#    - name: configuring /etc/resolv.conf workaround
#      template:
#        src: "templates/resolv.conf.j2"
#        dest: "/etc/resolv.conf.mine"
#        owner: root
#        group: root
#        mode: 0644

#    - name: updating current /etc/resolv.conf
#      command: /etc/rc.local
#      when: rc_local.changed

- name: Installs Gitlab-CE
  hosts: gitlab-server
  become: true
  vars:
    - config_gitlab: true
    - gitlab_active_directory: true
    - gitlab_ldap_base_dn: 'CN=Users,DC=vagrant,DC=local'  #define here or in group_vars/group
    - gitlab_ldap_bind_dn: 'CN=gitlab,CN=Users,DC=vagrant,DC=local'  #define here or in group_vars/group
    - gitlab_ldap_bind_pass: 'P@55w0rd'  #define here or in group_vars/group
    - gitlab_ldap_enabled: true  #define here or in group_vars/group
    - gitlab_ldap_servers:  #define here or in group_vars/group
        - host: '192.168.202.200'
          role: main
    - nameserver: '192.168.202.200'
    - pri_domain_name: vagrant.local
  roles:
    - role: ansible-postfix
    - role: ansible-gitlab-ce
  tasks:
#    - name: Creating /etc/rc.local
#      template:
#        src: "templates/rc.local.j2"
#        dest: "/etc/rc.local"
#        owner: root
#        group: root
#        mode: 0755
#      register: rc_local

#    - name: configuring /etc/resolv.conf workaround
#      template:
#        src: "templates/resolv.conf.j2"
#        dest: "/etc/resolv.conf.mine"
#        owner: root
#        group: root
#        mode: 0644

#    - name: updating current /etc/resolv.conf
#      command: /etc/rc.local
#      when: rc_local.changed

- name: Update /etc/hosts
  hosts: all
  remote_user: vagrant
  become: true
  vars:
    - pri_domain_name: vagrant.local
  roles:
  tasks:
    - name: updating /etc/hosts
      lineinfile:
        dest: /etc/hosts
        regexp: ".*{{ item }}$"
        line: "{{ hostvars[item].ansible_ssh_host }} {{ item }} {{ item }}.{{ pri_domain_name }}"
        state: present
      with_items: '{{ groups.all }}'
